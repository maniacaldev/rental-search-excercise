/*! Turo Rental Car Search - v0.1.0 - 2017-01-11
* Copyright (c) 2017 Christopher M. Gladney; Licensed MIT */
!function(){"use strict";
// function to control validation of the rental search form using jQuery Validate
function a(){$("#search-form").validate({
// handle general invalid submission message
invalidHandler:function(a,b){var c=b.numberOfInvalids();if(c){var d="<strong>Oops!</strong> Looks like you missed something. All fields are required, so please check below for the missing information.";$("#search-form-notifications").html(d),$("#search-form-notifications").addClass("message-errors-visible")}else $(".search-form-notifications").hide()},
// handle submission of valid form
submitHandler:function(a,c){c.preventDefault();
// console.log('running submit handler.');
var d=$("#pick-up-location").val(),e=$("#pick-up-date").val();e=e.substr(5,2)+"/"+e.substr(8,2)+"/"+e.substr(0,4);var f=$("#drop-off-date").val();f=f.substr(5,2)+"/"+f.substr(8,2)+"/"+f.substr(0,4),b(d,e,f)},
// handle message placement if field invalid
errorElement:"span",errorPlacement:function(a,b){var c=$(b).data("error");c?$(c).append(a):a.insertAfter(b)},
// set the validation rules
rules:{"pick-up-location":{digits:!0,minlength:5,maxlength:5,required:!0},"pick-up-date":{required:!0,date:!0,mindate:!0},"drop-off-date":{required:!0,date:!0,mindate:!0,returndate:!0}},
// set the messages returned if invalid
messages:{"pick-up-location":{minlength:"Please enter a 5 digit zip code.",maxlength:"Please enter a 5 digit zip code.",digits:"Please enter a 5 digit zip code.",required:"Please enter a 5 digit zip code."},"pick-up-date":{required:"Please select a pick-up date.",date:"Please select a pick-up date.",mindate:"Please select a future date."},"drop-off-date":{required:"Please select a drop-off date.",date:"Please select a drop-off date.",mindate:"Please select a future date.",returndate:"Date must be > pick up date."}}})}
// function to populate car search results via the Hotwire.com Rental Car Search API via AJAX
function b(a,b,c){var d="//api.hotwire.com/v1/search/car?apikey=vddxn5q8maz65xbty36e7uw2&format=jsonp&dest="+a+"&startdate="+b+"&enddate="+c+"&pickuptime=24:00&dropofftime=24:30";$("body .search-wrap").prepend('<span class="loader-wrap"><span class="loader"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80"><style type="text/css"/><path class="st0 wheel-component" d="M40 0C18 0 0 18 0 40s18 40 40 40 40-18 40-40S62 0 40 0zM40 68c-15 0-28-12-28-28 0-15 12-28 28-28S68 25 68 40 55 68 40 68z"/><path class="st0 wheel-component" d="M65 38c0-4-2-8-4-11 -4 5-11 7-15 4 -4-3-4-10-1-15C44 15 42 15 40 15s-4 0-6 1c4 6 3 12-1 15S23 32 19 27c-2 3-3 7-4 11 6-2 13 1 14 5 2 5-2 10-8 13 3 3 6 6 10 7 0-7 4-12 10-12s9 5 10 12c4-1 7-4 10-7 -6-2-10-8-8-13C52 39 59 36 65 38zM40 48c-4 0-8-4-8-8s4-8 8-8 8 4 8 8S44 48 40 48z"/><circle class="st0 wheel-component" cx="40" cy="40" r="5"/></svg></span></span>'),
// get our available car information from Hotwire via JSONP to avoid cross-domain access restrictions
$.ajax({type:"GET",url:d,dataType:"jsonp",jsonpCallback:"callback",
// handle a successful call to the Hotwire API
success:function(d){
// generally handle API errors if no results are populated
// console.log(data);
// remove the loader spinner
// $('.loader-wrap').remove();
// remove old search results
// generally handle API errors if no results are populated
// populate results
// add additional car meta/details to results
// smoothly scroll to the top of the results wrapper
return $("#results").empty(),$("#results").append('<div id="search-criteria" class="group"><p><strong>Your Search</strong><span><span>Location</span> '+a+' <span class="spacer">&nbsp;&nbsp;</span><span>Pick-up Date</span> '+b+' <span class="spacer">&nbsp;&nbsp;</span><span>Drop-off Date</span> '+c+"</p></span></div>"),d.hasOwnProperty("Result")?($.each(d.Result,function(a,b){$("#results").append('<div class="result" data-id="'+b.ResultId+'" data-ref="'+b.HWRefNumber+'" data-car-type-code="'+b.CarTypeCode+'"><div class="result-col result-image-col"><img class="result-image" src="/dist/svg/cars/'+b.CarTypeCode+'.svg" alt="'+b.CarTypeCode+'"></div><div class="result-col"><p><strong>Daily Rate:</strong> $'+b.DailyRate+"</p><p><strong>Subtotal:</strong> $"+b.SubTotal+"</p><p><strong>Taxes/Fees</strong>: $"+b.TaxesAndFees+"</p><h3>$"+b.TotalPrice+'</h3><a class="rent-link" href="'+b.DeepLink+'" target="_blank">Rent</a></div></div>')}),$.each(d.MetaData.CarMetaData.CarTypes,function(a,b){b.CarTypeCode;$('#results .result[data-car-type-code="'+b.CarTypeCode+'"] .result-col:first-of-type').after('<div class="car-type-details result-col"><h2>'+b.CarTypeName+"</h2><p>"+b.PossibleModels+"</p><p><strong>Features: </strong>"+b.PossibleFeatures+"</p><p><strong>Seating: </strong>"+b.TypicalSeating+"</p></div>")}),void $("body").scrollTo(".results-wrap",{duration:600,offset:-0})):(alert('There were was an problem processing you request.. The specific error was "'+StatusDesc+'"'),!1)},
// handle errors connecting to the Hotwire API
error:function(){alert("There was an error connecting to the search API. Please try again or contact the developer if this continue to happen.")}})}
// add validation method to compare input date to current date
$.validator.addMethod("mindate",function(a,b){
// get the current date in local time for comparison
var c=new Date,d=c.getMonth()+1,e=c.getDate(),f=c.getFullYear()+"-"+(10>d?"0":"")+d+"-"+(10>e?"0":"")+e;
// console.log('Input date: ', value);
// console.log('Now date for comparison: ', now);
return this.optional(b)||a>=f}),
// add validation method to compare drop-off date to pick-up date
$.validator.addMethod("returndate",function(a,b){var c=$("#pick-up-date").val();
// console.log('Input date: ', value);
// console.log('Pick up date for comparison: ', pickUpDate);
return this.optional(b)||a>c}),$(document).ready(function(){
// init validation
a()})}();